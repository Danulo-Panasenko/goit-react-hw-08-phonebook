{"version":3,"file":"static/js/172.31575961.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/Button/Button.jsx","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/inititalState.js","components/Form/Form.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"block\":\"ContactForm_block__1h2W+\",\"style\":\"ContactForm_style__A+xSv\"};","export const getAllContacts = store => store.contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    // console.log(contacts.items.data);\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.includes(normalizedFilter)\n  );\n};\n","export const getFilter = store => store.filter;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ children, onClick, type }) => {\n  return (\n    <button onClick={onClick} type={type}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.defaultProps = {\n  type: 'submit',\n};\n\nButton.prototypes = {\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf(['submit', 'button', 'reset']),\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/Button/Button';\n//import { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n///import { deleteContact } from 'redux/operations';\n\nconst ContactList = ({ filteredContacts, deleteContact }) => {\n  // const visibleContacts = useSelector(getFilteredContacts);\n  const Contact = filteredContacts.map(({ id, name, number }) => (\n    <li key={id}>\n      {name}:{number}\n      <Button onClick={() => deleteContact(id)} type=\"button\">\n        Delete\n      </Button>\n    </li>\n  ));\n  return <ul>{Contact}</ul>;\n};\nexport default ContactList;\n\nContactList.defaultProps = {\n  FilteredContacts: [],\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func,\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\"};","import css from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ handleChange }) => {\n  return (\n    <div>\n      <label className={css.label}>Find contacts by name</label>\n      <input name=\"filter\" onChange={handleChange} className={css.input} />\n    </div>\n  );\n};\nexport default Filter;\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"Form_formGroup__Y9yoD\",\"input\":\"Form_input__FTtTw\",\"label\":\"Form_label__8nx+5\"};","const inititalState = {\n  name: '',\n  number: '',\n};\nexport default inititalState;\n","import { useState } from 'react';\nimport css from './Form.module.css';\nimport Button from 'components/Button/Button';\nimport inititalState from './inititalState.js';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...inititalState });\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   onSubmit(state);\n  //   setState({ ...inititalState });\n  // };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = onSubmit({ name, number });\n    if (result) {\n      setState({ ...inititalState });\n    }\n  };\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={css.formGroup}>\n        <label className={css.label}>Name</label>\n        <input\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={css.formGroup}>\n        <label className={css.label}>Number</label>\n        <input\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Number\"\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { useEffect } from 'react';\nimport { fetchContacts, addContact, deleteContact } from 'redux/operations';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport ContactList from 'components/Contact/Contact';\nimport Filter from 'components/Filter/Filter';\nimport Form from 'components/Form/Form';\n\nconst ContactForm = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isDublicate = contName => {\n    const normalizedName = contName.toLowerCase();\n    const result = filteredContacts.find(({ name }) => {\n      return name.toLowerCase() === normalizedName;\n    });\n    return Boolean(result);\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    if (isDublicate(name)) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n    const action = addContact({ name, number });\n    dispatch(action);\n    return true;\n  };\n\n  const handleDeleteContact = id => {\n    const action = deleteContact(id);\n    dispatch(action);\n  };\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  //  const filteredContacts = getFilteredContacts();\n  // const ContactList = props => {\n  //   console.log(props);\n  //   console.log(filteredContacts);\n  //   console.log(handleDeleteContact);\n  // };\n  return (\n    <div className={css.style}>\n      <h4>Phonebook</h4>\n      <div className={css.wrapper}>\n        <div className={css.block}>\n          <Form onSubmit={handleAddContact} />\n        </div>\n        <div>\n          <h4>Contacts</h4>\n          <Filter value={filter} handleChange={changeFilter} />\n          <ContactList\n            deleteContact={handleDeleteContact}\n            filteredContacts={filteredContacts}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import ContactForm from 'components/ContactForm/ContactForm';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","name","number","includes","getFilter","store","Button","children","onClick","type","defaultProps","prototypes","PropTypes","ContactList","filteredContacts","deleteContact","Contact","map","id","FilteredContacts","handleChange","className","css","onChange","onSubmit","useState","inititalState","state","setState","target","value","prevState","e","preventDefault","placeholder","pattern","title","required","useSelector","dispatch","useDispatch","useEffect","fetchContacts","contName","normalizedName","result","find","Boolean","isDublicate","alert","action","addContact","setFilter","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}